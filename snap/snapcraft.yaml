name: cftcl
base: core20
version: '8.7+66'
summary: Tcl with Batteries Included from Codeforge, Ruby Lane and many other packages # 79 char long summary
description: |
  Tcl interpreter with a large selection of generally useful packages
  for core language extensions, working with JSON, XML and HTML, talking to
  databases, integrating with REST services like AWS, docker, working
  with raster and svg images, building distributed applications, just-in-time
  c compilation for new Tcl commands with tcc, and a REPL console.
grade: devel # must be 'stable' to release into candidate/stable channels
confinement: classic
compression: lzo
architectures:
  - build-on: amd64
  - build-on: armhf
  - build-on: arm64

parts:
  tcl:
    plugin: autotools
    source-type: tar
    source: https://core.tcl-lang.org/tcl/tarball/99b8ad35a258cade/tcl.tar.gz # tip of core-8-branch
    source-subdir: unix
    build-packages:
      - build-essential
    build-environment:
      - CFLAGS: "-O3 -flto"
    override-build: |
      cd unix
      ./configure --prefix=/BOGUS --enable-64bit --enable-symbols
      make -j 16 all CFLAGS="$CFLAGS -fprofile-generate=prof"
      make test CFLAGS="$CFLAGS -fprofile-generate=prof"
      make clean
      make -j 16 all CFLAGS="$CFLAGS -fprofile-use=prof -Wno-coverage-mismatch"
      make install-binaries install-libraries install-tzdata install-packages install-headers install-private-headers DESTDIR=$SNAPCRAFT_PART_INSTALL
      cp "$SNAPCRAFT_PART_BUILD/libtommath/tommath.h" "$SNAPCRAFT_PART_INSTALL/BOGUS/include/"
      ln -sf tclsh8.7 "$SNAPCRAFT_PART_INSTALL/BOGUS/bin/tclsh"
      sed -i -e 's/::tmpath/::tm::path/' "$SNAPCRAFT_PART_INSTALL/BOGUS/lib/tcl8.7/tclIndex"
      sed -i -e "s/\/BOGUS/$(echo "$SNAPCRAFT_STAGE" | sed -e 's/\//\\\//g')/" "$SNAPCRAFT_PART_INSTALL/BOGUS/lib/tclConfig.sh"
    organize:
      BOGUS/lib: lib
      BOGUS/bin: bin
      BOGUS/include: include
    stage: [-BOGUS]

  tclconfig:
    plugin: dump
    source-type: tar
    source: https://core.tcl-lang.org/tclconfig/tarball/1f17dfd726292dc4/tclconfig.tar.gz
    organize:
      install-sh: tclconfig/
      tcl.m4: tclconfig/
    stage: [tclconfig, -README.txt, -ChangeLog]
    prime: [-tclconfig]

  thread:
    after: [tclconfig]
    source-type: tar
    source: https://core.tcl-lang.org/thread/tarball/2a83440579/thread.tar.gz
    plugin: autotools
    build-environment:
      - CFLAGS: "$CFLAGS -flto -O3"
    override-build: |
      ln -s "$SNAPCRAFT_STAGE/tclconfig"
      ./configure --prefix= --enable-symbols --with-tcl=$SNAPCRAFT_STAGE/lib
      make -j 8 all
      make install-binaries install-libraries DESTDIR=$SNAPCRAFT_PART_INSTALL
    organize:
      root/stage/lib/*: lib/
    stage: [-root]

  tdbc:
    after: [tclconfig]
    source-type: tar
    source: https://github.com/cyanogilvie/tdbc/archive/1f8b684.tar.gz
    plugin: autotools
    build-environment:
      - CFLAGS: "$CFLAGS -flto -O3"
    override-build: |
      ln -s "$SNAPCRAFT_STAGE/tclconfig"
      ./configure --prefix= --enable-symbols --with-tcl=$SNAPCRAFT_STAGE/lib
      make -j 8 all
      make install-binaries install-libraries DESTDIR=$SNAPCRAFT_PART_INSTALL
    organize:
      root/stage/lib/*: lib/
    stage: [-root]

# tdbcpostgres:
#   after: [tclconfig, tdbc]
#   source-type: tar
#   source: https://github.com/cyanogilvie/tdbcpostgres/archive/488ca29f7b52730f11bdbaa67319ab1de211a27d.tar.gz
#   plugin: autotools
#   build-environment:
#     - CFLAGS: "$CFLAGS -flto -O3"
#   stage-packages:
#     - libpq5
#   override-build: |
#     ln -s "$SNAPCRAFT_STAGE/tclconfig"
#     ./configure --prefix= --enable-symbols --with-tcl=$SNAPCRAFT_STAGE/lib --with-tdbc=$SNAPCRAFT_STAGE/lib/tdbc1.1.1
#     make -j 8 all
#     make install-binaries install-libraries DESTDIR=$SNAPCRAFT_PART_INSTALL
#   organize:
#     root/stage/lib/*: lib/
#   stage: [-root]

  pgwire:
    plugin: nil
    source-type: git
    source: https://github.com/cyanogilvie/pgwire
    source-tag: v3.0.0b21
    source-depth: 1
    override-build: |
      make
      mkdir -p "$SNAPCRAFT_PART_INSTALL/lib/tcl8/site-tcl/"
      cp -r src/tm/* "$SNAPCRAFT_PART_INSTALL/lib/tcl8/site-tcl/"

  tcltls:
    after: [tclconfig]
    source-type: tar
    source: https://core.tcl-lang.org/tcltls/tarball/tls-1-7-22/tcltls.tar.gz
    plugin: autotools
    build-packages:
      - curl
      - libssl-dev
      - pkg-config
    stage-packages:
      - libssl1.1
    build-environment:
      - CFLAGS: "$CFLAGS -flto -O3"
    override-build: |
      ln -s "$SNAPCRAFT_STAGE/tclconfig"
      ./autogen.sh
      ./configure --prefix= --with-tcl=$SNAPCRAFT_STAGE/lib --libdir=/lib --disable-sslv2 --disable-sslv3 --disable-tlsv1.0 --disable-tlsv1.1 --enable-ssl-fastpath
      make -j 8 all
      make install DESTDIR=$SNAPCRAFT_PART_INSTALL
    stage: [-usr/share]

  parseargs:
    after: [tcl]
    plugin: nil
    source-type: git
    source: https://github.com/RubyLane/parse_args
    source-tag: v0.5.1
    source-depth: 1
    build-environment:
      - CFLAGS: "$CFLAGS -flto -O3"
    override-build: |
      autoconf
      ./configure --enable-symbols --with-tcl=$SNAPCRAFT_STAGE/lib
      make install-binaries install-libraries DESTDIR=$SNAPCRAFT_PART_INSTALL
    organize:
      root/stage/lib/*: lib/
    stage: [lib/*]

  rljson:
    after: [tcl]
    plugin: nil
    source-type: git
    source: https://github.com/RubyLane/rl_json
    source-tag: 0.12.2
    source-depth: 1
    source-submodules:
      - tclconfig
      - teabase
    build-environment:
      - CFLAGS: "$CFLAGS -flto -O3"
    override-build: |
      autoconf
      ./configure --prefix= --enable-symbols --with-tcl=$SNAPCRAFT_STAGE/lib
      make -j 8 all
      make install-binaries install-libraries DESTDIR=$SNAPCRAFT_PART_INSTALL
    organize:
      root/stage/lib/*: lib/
      root/stage/include/*: include/
    stage: [lib/*, include/*]

  hash:
    after: [tcl]
    plugin: nil
    source-type: git
    source: https://github.com/cyanogilvie/hash
    source-tag: v0.3.2
    build-environment:
      - CFLAGS: "$CFLAGS -flto -O3"
    override-build: |
      autoconf
      ./configure --enable-symbols --with-tcl=$SNAPCRAFT_STAGE/lib
      make -j 8 all
      make install-binaries install-libraries DESTDIR=$SNAPCRAFT_PART_INSTALL
    organize:
      root/stage/lib/*: lib/
      root/stage/include/*: include/
    stage: [lib/*, include/*]

  unixsockets:
    after: [tcl]
    plugin: nil
    source-type: git
    source: https://github.com/cyanogilvie/unix_sockets
    source-depth: 1
    source-tag: v0.2.1
    source-submodules:
      - tclconfig
      - teabase
    build-environment:
      - CFLAGS: "$CFLAGS -flto -O3"
    override-build: |
      autoconf
      ./configure --enable-symbols --with-tcl=$SNAPCRAFT_STAGE/lib
      make -j 8 all
      make install-binaries install-libraries DESTDIR=$SNAPCRAFT_PART_INSTALL
    organize:
      root/stage/lib/*: lib/
      root/stage/include/*: include/
    stage: [lib/*, include/*]

  tcllib:
    after: [tcl]
    plugin: nil
    source-type: tar
    source: https://core.tcl-lang.org/tcllib/uv/tcllib-1.20.tar.gz
    build-environment:
      - LD_LIBRARY_PATH: "$SNAPCRAFT_STAGE/lib"
    override-build: |
      ./configure
      make install-libraries install-applications DESTDIR=$SNAPCRAFT_PART_INSTALL
    organize:
      usr/local/lib/*: lib/
      usr/local/bin/*: bin/
    stage: [lib/*, bin/*]

  gcclass:
    source-type: tar
    source: https://github.com/RubyLane/gc_class/archive/f295f65.tar.gz
    plugin: dump
    organize:
      gc_class*.tm: lib/tcl8/site-tcl/
    stage: [lib/*]

  rlhttp:
    source-type: git
    source: https://github.com/RubyLane/rl_http
    source-tag: "1.14.9"
    plugin: nil
    override-build: |
      make install PREFIX=$SNAPCRAFT_PART_INSTALL
    stage: [lib/*]

  sqlite:
    after: [tcl]
    source-type: tar
    source: https://sqlite.org/2023/sqlite-autoconf-3410200.tar.gz
    build-environment:
      - CFLAGS: "$CFLAGS -flto -O3"
    plugin: nil
    override-build: |
      cd tea
      autoconf
      ./configure --with-tcl=$SNAPCRAFT_STAGE/lib
      make all install-binaries install-libraries DESTDIR=$SNAPCRAFT_PART_INSTALL
    organize:
      root/stage/lib/*: lib/
    stage: [lib/*]

  tcc4tcl:
    after: [tcl]
    source-type: tar
    source: https://github.com/cyanogilvie/tcc4tcl/archive/b8171e0.tar.gz
    plugin: nil
    build-packages:
      - openssl
      - wget
    stage-packages:
      - libc6-dev
    override-build: |
      if [ "$SNAPCRAFT_TARGET_ARCH" = "amd64" -o "$SNAPCRAFT_TARGET_ARCH" = "armhf" ]
      then
        build/pre.sh
        sed --in-place -e 's/@@VERS@@/0.30.1/g' configure.ac Makefile.in tcc4tcl.tcl
        autoconf
        ./configure --prefix=$SNAPCRAFT_PART_INSTALL --with-tcl=$SNAPCRAFT_STAGE/lib
        make -j 8 all
        make install
      fi
    stage: 
      - -usr/share/man
      - -usr/share/doc
      - -usr/share/lintian
      - -usr/bin
      - -include/expat*
      - -usr/lib/**/*.a

  tbuild:
    after: [tcl]
    plugin: nil
    source-type: tar
    source: https://github.com/cyanogilvie/tbuild/archive/e526a9c.tar.gz
    override-build: |
      mkdir -p $SNAPCRAFT_PART_INSTALL/bin
      cp tbuild-lite.tcl $SNAPCRAFT_PART_INSTALL/bin/tbuild-lite
      #echo "#!/bin/sh\nset\nexec \"\$(dirname \"\$(readlink -f \"\$0\")\")/tbuild-lite.real\" \"\$@\"" > "$SNAPCRAFT_PART_INSTALL/bin/tbuild-lite"
      chmod +x $SNAPCRAFT_PART_INSTALL/bin/tbuild-lite

  cflib:
    after: [tbuild]
    plugin: nil
    source-type: tar
    source: https://github.com/cyanogilvie/cflib/archive/1.16.1.tar.gz
    build-environment:
      - TCL_LIBRARY: "$SNAPCRAFT_STAGE/lib/tcl8.7"
      - LD_LIBRARY_PATH: "$SNAPCRAFT_STAGE/lib"
    override-build: |
      tbuild-lite
      mkdir -p $SNAPCRAFT_PART_INSTALL/lib/tcl8/site-tcl
      cp -r tm/tcl/* $SNAPCRAFT_PART_INSTALL/lib/tcl8/site-tcl/

  sop:
    after: [tbuild]
    plugin: nil
    source-type: tar
    source: https://github.com/cyanogilvie/sop/archive/1.7.2.tar.gz
    build-environment:
      - TCL_LIBRARY: "$SNAPCRAFT_STAGE/lib/tcl8.7"
      - LD_LIBRARY_PATH: "$SNAPCRAFT_STAGE/lib"
    override-build: |
      tbuild-lite
      mkdir -p $SNAPCRAFT_PART_INSTALL/lib/tcl8/site-tcl
      cp -r tm/tcl/* $SNAPCRAFT_PART_INSTALL/lib/tcl8/site-tcl/

  netdgram:
    after: [tbuild]
    plugin: nil
    source-type: tar
    source: https://github.com/cyanogilvie/netdgram/archive/v0.9.12.tar.gz
    build-environment:
      - TCL_LIBRARY: "$SNAPCRAFT_STAGE/lib/tcl8.7"
      - LD_LIBRARY_PATH: "$SNAPCRAFT_STAGE/lib"
    override-build: |
      tbuild-lite
      mkdir -p $SNAPCRAFT_PART_INSTALL/lib/tcl8/site-tcl
      cp -r tm/tcl/* $SNAPCRAFT_PART_INSTALL/lib/tcl8/site-tcl/

  evlog:
    after: [tbuild]
    plugin: nil
    source-type: tar
    source: https://github.com/cyanogilvie/evlog/archive/c6c2529.tar.gz
    build-environment:
      - TCL_LIBRARY: "$SNAPCRAFT_STAGE/lib/tcl8.7"
      - LD_LIBRARY_PATH: "$SNAPCRAFT_STAGE/lib"
    override-build: |
      tbuild-lite
      mkdir -p $SNAPCRAFT_PART_INSTALL/lib/tcl8/site-tcl
      cp -r tm/tcl/* $SNAPCRAFT_PART_INSTALL/lib/tcl8/site-tcl/

  dsl:
    after: [tbuild]
    plugin: nil
    source-type: git
    source: https://github.com/cyanogilvie/dsl
    source-tag: "v0.5"
    build-environment:
      - TCL_LIBRARY: "$SNAPCRAFT_STAGE/lib/tcl8.7"
      - LD_LIBRARY_PATH: "$SNAPCRAFT_STAGE/lib"
    override-build: |
      tbuild-lite
      mkdir -p $SNAPCRAFT_PART_INSTALL/lib/tcl8/site-tcl
      cp -r tm/tcl/* $SNAPCRAFT_PART_INSTALL/lib/tcl8/site-tcl/

  logging:
    after: [tbuild]
    plugin: nil
    source-type: tar
    source: https://github.com/cyanogilvie/logging/archive/e709389.tar.gz
    build-environment:
      - TCL_LIBRARY: "$SNAPCRAFT_STAGE/lib/tcl8.7"
      - LD_LIBRARY_PATH: "$SNAPCRAFT_STAGE/lib"
    override-build: |
      tbuild-lite
      mkdir -p $SNAPCRAFT_PART_INSTALL/lib/tcl8/site-tcl
      cp -r tm/tcl/* $SNAPCRAFT_PART_INSTALL/lib/tcl8/site-tcl/

  sockopt:
    after: [tcl]
    plugin: nil
    source-type: tar
    source: https://github.com/cyanogilvie/sockopt/archive/c574d92.tar.gz
    build-environment:
      - CFLAGS: "$CFLAGS -flto -O3"
    override-build: |
      autoconf
      ./configure --enable-symbols --with-tcl=$SNAPCRAFT_STAGE/lib
      make -j 8 all
      make install-binaries install-libraries DESTDIR=$SNAPCRAFT_PART_INSTALL
    organize:
      root/stage/lib: lib
    stage: [lib/*]

  crypto:
    after: [tbuild]
    plugin: nil
    source-type: tar
    source: https://github.com/cyanogilvie/crypto/archive/7a04540.tar.gz
    build-environment:
      - TCL_LIBRARY: "$SNAPCRAFT_STAGE/lib/tcl8.7"
      - LD_LIBRARY_PATH: "$SNAPCRAFT_STAGE/lib"
    override-build: |
      tbuild-lite
      mkdir -p $SNAPCRAFT_PART_INSTALL/lib/tcl8/site-tcl
      cp -r tm/tcl/* $SNAPCRAFT_PART_INSTALL/lib/tcl8/site-tcl/

  datasource:
    after: [tbuild]
    plugin: nil
    source-type: tar
    source: https://github.com/cyanogilvie/datasource/archive/v0.2.4.tar.gz
    build-environment:
      - TCL_LIBRARY: "$SNAPCRAFT_STAGE/lib/tcl8.7"
      - LD_LIBRARY_PATH: "$SNAPCRAFT_STAGE/lib"
    override-build: |
      tbuild-lite
      mkdir -p $SNAPCRAFT_PART_INSTALL/lib/tcl8/site-tcl
      cp -r tm/tcl/* $SNAPCRAFT_PART_INSTALL/lib/tcl8/site-tcl/

  m2:
    after: [tbuild]
    plugin: nil
    source-type: tar
    source: https://github.com/cyanogilvie/m2/archive/v0.43.15.tar.gz
    build-environment:
      - TCL_LIBRARY: "$SNAPCRAFT_STAGE/lib/tcl8.7"
      - LD_LIBRARY_PATH: "$SNAPCRAFT_STAGE/lib"
    override-build: |
      tbuild-lite build_tm m2
      mkdir -p $SNAPCRAFT_PART_INSTALL/lib/tcl8/site-tcl
      cp -r tm/tcl/* $SNAPCRAFT_PART_INSTALL/lib/tcl8/site-tcl/
      mkdir -p $SNAPCRAFT_PART_INSTALL/bin
      mkdir -p $SNAPCRAFT_PART_INSTALL/opt/m2
      cp -r m2_node $SNAPCRAFT_PART_INSTALL/opt/m2/
      cp -r tools $SNAPCRAFT_PART_INSTALL/opt/m2/
      cp -r authenticator $SNAPCRAFT_PART_INSTALL/opt/m2/
      cp -r admin_console $SNAPCRAFT_PART_INSTALL/opt/m2/
      mkdir -p $SNAPCRAFT_PART_INSTALL/etc/codeforge/authenticator
      cp -r plugins $SNAPCRAFT_PART_INSTALL/etc/codeforge/authenticator/

  tclreadline:
    after: [tcl]
    plugin: nil
    source-type: tar
    source: https://github.com/cyanogilvie/tclreadline/archive/v2.3.8.1.tar.gz
    build-environment:
      - CFLAGS: "$CFLAGS -flto -O3"
    build-packages:
      - libreadline-dev
    stage-packages:
      - libreadline8
    override-build: |
      autoconf
      ./configure --prefix= --without-tk --with-tcl=$SNAPCRAFT_STAGE/lib --with-tcl-includes=$SNAPCRAFT_STAGE/include --enable-symbols
      make install-libLTLIBRARIES install-tclrlSCRIPTS DESTDIR=$SNAPCRAFT_PART_INSTALL
      mv $SNAPCRAFT_PART_INSTALL/lib/libtclreadline-*.so $SNAPCRAFT_PART_INSTALL/lib/tclreadline2.3.8.1/libtclreadline.so
    stage: [lib/*]

  expect:
    after: [tcl]
    source-type: tar
    source: https://core.tcl-lang.org/expect/tarball/f8e8464f14/expect.tar.gz
    plugin: nil
    build-environment:
      - CFLAGS: "$CFLAGS -flto -O3"
    override-build: |
      if [ "$SNAPCRAFT_TARGET_ARCH" = "amd64" -o "$SNAPCRAFT_TARGET_ARCH" = "armhf" ]
      then
        ./configure --enable-symbols --with-tcl=$SNAPCRAFT_STAGE/lib
        make -j 8 all
        make install-binaries install-libraries DESTDIR=$SNAPCRAFT_PART_INSTALL
      fi
    organize:
      root/stage/lib: lib
    stage: [lib/*]

  tclsignal:
    after: [tcl]
    plugin: nil
    source-type: tar
    source: https://github.com/cyanogilvie/tclsignal/archive/v1.4.4.1.tar.gz
    build-environment:
      - CFLAGS: "$CFLAGS -flto -O3"
    override-build: |
      autoconf
      ./configure --enable-symbols --with-tcl=$SNAPCRAFT_STAGE/lib
      make -j 8 all
      make install-binaries install-libraries DESTDIR=$SNAPCRAFT_PART_INSTALL
    organize:
      root/stage/lib: lib
    stage: [lib/*]

  type:
    after: [tcl]
    plugin: nil
    source-type: git
    source: https://github.com/cyanogilvie/type
    source-tag: v0.2.1
    build-environment:
      - CFLAGS: "$CFLAGS -flto -O3"
    override-build: |
      autoconf
      ./configure --enable-symbols --with-tcl=$SNAPCRAFT_STAGE/lib
      make -j 8 install-binaries install-libraries DESTDIR=$SNAPCRAFT_PART_INSTALL
    organize:
      root/stage/lib: lib
    stage: [lib/*]

  inotify:
    after: [tcl]
    plugin: nil
    source-type: tar
    source: https://github.com/cyanogilvie/inotify/archive/298f608.tar.gz
    build-environment:
      - CFLAGS: "$CFLAGS -flto -O3"
    override-build: |
      autoconf
      ./configure --enable-symbols --with-tcl=$SNAPCRAFT_STAGE/lib
      make -j 8 all
      make install-binaries install-libraries DESTDIR=$SNAPCRAFT_PART_INSTALL
    organize:
      root/stage/lib: lib
    stage: [lib/*]

  phash:
    plugin: nil
    source-type: tar
    source: https://github.com/aetilius/pHash/archive/dea9ffc.tar.gz
    build-packages:
      - libboost-dev
      - libjpeg-turbo8
      - libpng-dev
      - libtiff-dev
      - cmake
    stage-packages:
      - libjbig0
      - libjpeg-turbo8
      - libpng16-16
      - libtiff5
      - libwebp6
    build-environment:
      - CFLAGS: "$CFLAGS -fPIC"
    override-build: |
      cmake -DPHASH_DYNAMIC=ON -DPHASH_STATIC=OFF .
      make install DESTDIR=$SNAPCRAFT_PART_INSTALL
      cp -a third-party/CImg $SNAPCRAFT_PART_INSTALL/usr/include/
    organize:
      usr/lib: lib
      usr/include: include
      usr/local/lib: lib
      usr/local/include: include
    stage:
      [include/*, lib/*, -usr]

  pixel:
    after: [tcl, phash]
    plugin: nil
    source-type: git
    source: https://github.com/cyanogilvie/pixel
    source-tag: v3.5.3
    build-packages:
      - libjpeg-turbo8-dev
      - libexif-dev
      - libpng-dev
      - libwebp-dev
      - libimlib2-dev
    stage-packages:
      - libjpeg-turbo8
      - libexif12
      - libpng16-16
      - libwebp6
      - libimlib2
    build-environment:
      - CFLAGS: "$CFLAGS -flto -O3 -I$SNAPCRAFT_PART_INSTALL/include -I$SNAPCRAFT_STAGE/include -L$SNAPCRAFT_STAGE/lib"
    override-build: |
      cd pixel_core
        echo "Building pixel_core"
        autoconf
        ./configure --prefix= --enable-symbols --with-tcl=$SNAPCRAFT_STAGE/lib
        make -j 8 all
        sed -inline -e "s/$(echo "$SNAPCRAFT_STAGE" | sed -e 's/\//\\\//g')/$(echo "$SNAPCRAFT_PART_INSTALL/root/stage" | sed -e 's/\//\\\//g')/" pixelConfig.sh
        make install-binaries install-libraries DESTDIR=$SNAPCRAFT_PART_INSTALL
        cp pixelConfig.sh $SNAPCRAFT_PART_INSTALL/root/stage/lib/
      cd ../pixel_jpeg
        echo "Building pixel_jpeg"
        autoconf
        ./configure --prefix= --enable-symbols --with-tcl=$SNAPCRAFT_STAGE/lib --with-pixel=$SNAPCRAFT_PART_INSTALL/root/stage/lib
        make -j 8 all
        make install-binaries install-libraries DESTDIR=$SNAPCRAFT_PART_INSTALL
      cd ../pixel_png
        echo "Building pixel_png"
        autoconf
        ./configure --prefix= --enable-symbols --with-tcl=$SNAPCRAFT_STAGE/lib --with-pixel=$SNAPCRAFT_PART_INSTALL/root/stage/lib
        make -j 8 all
        make install-binaries install-libraries DESTDIR=$SNAPCRAFT_PART_INSTALL
        #     cd ../pixel_svg_cairo
        #       echo "Building pixel_svg_cairo"
        #       autoconf
        #       ./configure --prefix= --enable-symbols --with-tcl=$SNAPCRAFT_STAGE/lib --with-pixel=$SNAPCRAFT_PART_INSTALL/root/stage/lib
        make -j 8 all
        make install-binaries install-libraries DESTDIR=$SNAPCRAFT_PART_INSTALL
      cd ../pixel_webp
        echo "Building pixel_webp"
        autoconf
        ./configure --prefix= --enable-symbols --with-tcl=$SNAPCRAFT_STAGE/lib --with-pixel=$SNAPCRAFT_PART_INSTALL/root/stage/lib
        make -j 8 all
        make install-binaries install-libraries DESTDIR=$SNAPCRAFT_PART_INSTALL
      cd ../pixel_imlib2
        echo "Building pixel_imlib2"
        autoconf
        ./configure --prefix= --enable-symbols --with-tcl=$SNAPCRAFT_STAGE/lib --with-pixel=$SNAPCRAFT_PART_INSTALL/root/stage/lib
        make -j 8 all
        make install-binaries install-libraries DESTDIR=$SNAPCRAFT_PART_INSTALL
      cd ../pixel_phash
        echo "Building pixel_phash"
        autoconf
        ./configure --prefix= --enable-symbols --with-tcl=$SNAPCRAFT_STAGE/lib --with-pixel=$SNAPCRAFT_PART_INSTALL/root/stage/lib
        make -j 8 all
        make install-binaries install-libraries DESTDIR=$SNAPCRAFT_PART_INSTALL
    organize:
      root/stage/lib: lib
    stage:
      - -usr/share/man
      - -usr/share/doc
      - -usr/share/lintian
      - -usr/bin
      - -root

  chantricks:
    after: [tcl]
    plugin: nil
    source-type: tar
    source: https://github.com/cyanogilvie/chantricks/archive/v1.0.3.tar.gz
    build-environment:
      - TCL_LIBRARY: "$SNAPCRAFT_STAGE/lib/tcl8.7"
      - LD_LIBRARY_PATH: "$SNAPCRAFT_STAGE/lib"
    override-build: |
      make install-tm DESTDIR=$SNAPCRAFT_PART_INSTALL

  openapi:
    after: [tcl]
    plugin: nil
    source-type: tar
    source: https://github.com/cyanogilvie/tcl-openapi/archive/v0.4.12.tar.gz
    build-environment:
      - TCL_LIBRARY: "$SNAPCRAFT_STAGE/lib/tcl8.7"
      - LD_LIBRARY_PATH: "$SNAPCRAFT_STAGE/lib"
    override-build: |
      mkdir -p $SNAPCRAFT_PART_INSTALL/lib/tcl8/site-tcl
      cp -r *.tm $SNAPCRAFT_PART_INSTALL/lib/tcl8/site-tcl/

  docker:
    after: [openapi, rljson, parseargs, chantricks, tcllib]
    plugin: nil
    source-type: tar
    source: https://github.com/cyanogilvie/tcl-docker-client/archive/v0.9.2.tar.gz
    build-environment:
      - TCL_LIBRARY: "$SNAPCRAFT_STAGE/lib/tcl8.7"
      - LD_LIBRARY_PATH: "$SNAPCRAFT_STAGE/lib"
    override-build: |
      make install-tm DESTDIR=$SNAPCRAFT_PART_INSTALL

  tdom:
    after: [tcl]
    plugin: nil
    source-type: tar
    source: https://github.com/RubyLane/tdom/archive/cyan-0.9.3.2.tar.gz
    build-environment:
      - CFLAGS: "$CFLAGS -flto -O3"
    build-packages:
      - libgumbo-dev
    stage-packages:
      - libgumbo1
    override-build: |
      autoconf
      ./configure --prefix= --enable-symbols --with-tcl=$SNAPCRAFT_STAGE/lib --enable-html5
      make -j 8 all
      make install-binaries install-libraries DESTDIR=$SNAPCRAFT_PART_INSTALL
    organize:
      root/stage/lib: lib
    stage: [-root]

  tty:
    after: [tcl]
    plugin: nil
    source-type: git
    source: https://github.com/cyanogilvie/tcl-tty
    source-tag: v0.5
    build-environment:
      - CFLAGS: "$CFLAGS -flto -O3"
    override-build: |
      make install-tm DESTDIR=$SNAPCRAFT_PART_INSTALL

  parsetcl:
    after: [tcl, tdom]
    plugin: nil
    source-type: tar
    source: https://github.com/cyanogilvie/parsetcl/archive/030a1439b76747ec7a016c5bd0ae78c93fc9bb7b.tar.gz
    build-environment:
      - CFLAGS: "$CFLAGS -flto -O3"
    override-build: |
      ln -s "$SNAPCRAFT_STAGE/tclconfig"
      autoconf
      ./configure --prefix= --with-tcl=$SNAPCRAFT_STAGE/lib --with-tdom=$SNAPCRAFT_STAGE/lib --enable-symbols
      make install-binaries install-libraries DESTDIR=$SNAPCRAFT_PART_INSTALL
    organize:
      root/stage/lib: lib
    stage: [-root]

  botocore:
    plugin: dump
    source-type: tar
    source: https://github.com/boto/botocore/archive/refs/tags/1.27.96.tar.gz
    stage: [botocore/data/*]
    prime: [-botocore]

  aws:
    after: [botocore, tcl, rljson, parseargs, chantricks, cflib, rlhttp, gcclass, thread, tcllib, tdom]
    plugin: nil
    source-type: git
    source: https://github.com/cyanogilvie/aws-tcl
    source-tag: v2.0a5.2
    source-depth: 1
    build-environment:
      - LD_LIBRARY_PATH: "$SNAPCRAFT_STAGE/lib"
      - TCL_LIBRARY: "$SNAPCRAFT_STAGE/lib/tcl8.7"
    override-build: |
      make install DESTDIR=$SNAPCRAFT_PART_INSTALL

  trofs:
    after: [tcl]
    plugin: nil
    source: https://github.com/cyanogilvie/trofs/archive/v0.4.4.1.tar.gz
    source-type: tar
    build-environment:
      - CFLAGS: "$CFLAGS -flto -O3"
    override-build: |
      autoconf
      ./configure --prefix= --with-tcl=$SNAPCRAFT_STAGE/lib --enable-symbols
      make install-binaries install-libraries DESTDIR=$SNAPCRAFT_PART_INSTALL
    organize:
      root/stage/lib: lib
    stage: [-root]

  flock:
    plugin: make
    source-type: tar
    source: https://github.com/cyanogilvie/flock/archive/v0.6.tar.gz

  ck:
    after: [tcl]
    plugin: nil
    source: https://github.com/cyanogilvie/ck/archive/v8.6.tar.gz
    source-type: tar
    build-packages:
      - libncursesw5-dev
      - libncurses5-dev
    stage-packages:
      - libncursesw5
      - libncurses5
    build-environment:
      - CFLAGS: "$CFLAGS -flto -O3"
    override-build: |
      ln -s "$SNAPCRAFT_STAGE/tclconfig"
      autoconf
      ./configure --prefix= --with-tcl=$SNAPCRAFT_STAGE/lib --enable-symbols
      make -j 8 install-binaries install-libraries DESTDIR=$SNAPCRAFT_PART_INSTALL
      mkdir -p $SNAPCRAFT_PART_INSTALL/lib/ck8.6
      cp -a library $SNAPCRAFT_PART_INSTALL/lib/ck8.6/
    organize:
      root/stage/lib: lib
    stage: [-root]

  resolve:
    after: [tcl]
    plugin: nil
    source-type: git
    source: https://github.com/cyanogilvie/resolve
    source-tag: v0.10
    build-environment:
      - CFLAGS: "$CFLAGS -flto -O3"
    override-build: |
      autoconf
      ./configure --prefix= --with-tcl=$SNAPCRAFT_STAGE/lib --enable-symbols
      make -j 8 install-binaries install-libraries DESTDIR=$SNAPCRAFT_PART_INSTALL
    organize:
      root/stage/lib: lib
    stage: [-root]

  dedup:
    after: [tcl]
    plugin: nil
    source-type: git
    source: https://github.com/cyanogilvie/dedup
    source-tag: v0.9.5
    build-environment:
      - CFLAGS: "$CFLAGS -Ofast -flto -ffast-math -std=gnu11"
    override-build: |
      autoconf
      ./configure --prefix= --exec-prefix=/BOGUS --with-tcl=$SNAPCRAFT_STAGE/lib --enable-symbols
      #sed -inline -e "s/$(echo "$SNAPCRAFT_STAGE" | sed -e 's/\//\\\//g')/$(echo "$SNAPCRAFT_PART_INSTALL/" | sed -e 's/\//\\\//g')/" dedupConfig.sh
      make install-binaries install-libraries DESTDIR=$SNAPCRAFT_PART_INSTALL
      sed -i -e "s/\/BOGUS/$(echo "$SNAPCRAFT_STAGE" | sed -e 's/\//\\\//g')/" "$SNAPCRAFT_PART_INSTALL/BOGUS/lib/dedup0.9.5/dedupConfig.sh"
      cp $SNAPCRAFT_PART_INSTALL/BOGUS/lib/dedup0.9.5/dedupConfig.sh $SNAPCRAFT_PART_INSTALL/BOGUS/lib/
    organize:
      BOGUS/lib: lib
      BOGUS/include: include
    stage: [-BOGUS]

  re2c:
    plugin: dump
    source-type: git
    source: https://github.com/skvadrik/re2c/
    organize:
      .git: repos/re2c.git/
    stage: [repos/re2c.git]
    prime: [-repos/re2c.git]

  packcc:
    plugin: dump
    source-type: git
    source: https://github.com/arithy/packcc
    organize:
      .git: repos/packcc.git/
    stage: [repos/packcc.git]
    prime: [-repos/packcc.git]

  sqliterepo:
    plugin: dump
    source-type: git
    source: https://github.com/sqlite/sqlite
    organize:
      .git: repos/sqlite.git/
    stage: [repos/sqlite.git]
    prime: [-repos/sqlite.git]

  reuri:
    after: [dedup, re2c]
    plugin: nil
    source-type: git
    source: https://github.com/cyanogilvie/reuri
    source-tag: v0.10
    source-depth: 1
    source-submodules:
      #- tools/re2c
      - tclconfig
      - teabase
    build-environment:
      - CFLAGS: "$CFLAGS -Ofast -flto -ffast-math -std=gnu11"
    override-build: |
      git submodule update --init --recommend-shallow --depth=1 --reference $SNAPCRAFT_STAGE/repos/re2c.git tools/re2c
      autoconf
      ./configure --prefix= --exec-prefix=/BOGUS --with-tcl=$SNAPCRAFT_STAGE/lib --enable-symbols --with-dedup=$SNAPCRAFT_STAGE/lib
      sed -i -e "s/\/BOGUS/$(echo "$SNAPCRAFT_STAGE" | sed -e 's/\//\\\//g')/" reuriConfig.sh
      #make pgo install-binaries install-libraries DESTDIR=$SNAPCRAFT_PART_INSTALL
      make install-binaries install-libraries DESTDIR=$SNAPCRAFT_PART_INSTALL

      cp $SNAPCRAFT_PART_INSTALL/BOGUS/lib/reuri*/reuriConfig.sh $SNAPCRAFT_PART_INSTALL/BOGUS/lib/
    organize:
      BOGUS/lib: lib
      BOGUS/include: include
    stage: [-BOGUS]

  brotli:
    after: [tcl, tclconfig]
    plugin: nil
    source-type: git
    source: https://github.com/cyanogilvie/tcl-brotli
    source-tag: v0.3.1
    source-depth: 1
    build-packages:
      - pkg-config
      - libbrotli-dev
    stage-packages:
      - libbrotli1
    build-environment:
      - CFLAGS: "$CFLAGS -Ofast -flto -ffast-math -std=gnu11"
    override-build: |
      autoconf
      ./configure --prefix= --exec-prefix=$SNAPCRAFT_STAGE --with-tcl=$SNAPCRAFT_STAGE/lib --enable-symbols
      make install-binaries install-libraries DESTDIR=$SNAPCRAFT_PART_INSTALL
    organize:
      root/stage/lib: lib
    stage: [-root]

  aio:
    after: [tcl]
    plugin: nil
    source-type: git
    source: https://github.com/cyanogilvie/aio
    source-tag: v1.7.1
    build-environment:
      - TCL_LIBRARY: "$SNAPCRAFT_STAGE/lib/tcl8.7"
      - LD_LIBRARY_PATH: "$SNAPCRAFT_STAGE/lib"
    override-build: |
      make test && make install-tm PREFIX=$SNAPCRAFT_PART_INSTALL

  prng:
    after: [tcl]
    plugin: nil
    source-type: git
    source: https://github.com/cyanogilvie/prng
    source-tag: v0.7
    build-environment:
      - TCL_LIBRARY: "$SNAPCRAFT_STAGE/lib/tcl8.7"
      - LD_LIBRARY_PATH: "$SNAPCRAFT_STAGE/lib"
    override-build: |
      make test && make install-tm DESTDIR=$SNAPCRAFT_PART_INSTALL

  names:
    after: [tcl]
    plugin: nil
    source-type: git
    source: https://github.com/cyanogilvie/names
    source-tag: v0.1
    build-environment:
      - TCL_LIBRARY: "$SNAPCRAFT_STAGE/lib/tcl8.7"
      - LD_LIBRARY_PATH: "$SNAPCRAFT_STAGE/lib"
    override-build: |
      make test && make install-tm DESTDIR=$SNAPCRAFT_PART_INSTALL

  rltest:
    after: [tcl]
    plugin: nil
    source-type: git
    source: https://github.com/RubyLane/rltest
    source-tag: v1.5
    build-environment:
      - TCL_LIBRARY: "$SNAPCRAFT_STAGE/lib/tcl8.7"
      - LD_LIBRARY_PATH: "$SNAPCRAFT_STAGE/lib"
    override-build: |
      make install DESTDIR=$SNAPCRAFT_PART_INSTALL

  jitc:
    after: [tclconfig, re2c, packcc, sqliterepo]
    plugin: nil
    source-type: git
    source: https://github.com/cyanogilvie/jitc
    source-tag: v0.4
    source-depth: 1
    source-submodules:
      - tclconfig
      - teabase
      - tinycc
      - dedup
    build-environment:
      - CFLAGS: "$CFLAGS -O3 -flto -std=gnu11"
    build-packages:
      - python3
    override-build: |
      git submodule update --init --recommend-shallow --depth=1 --reference $SNAPCRAFT_STAGE/repos/re2c.git tools/re2c
      git submodule update --init --recommend-shallow --depth=1 --reference $SNAPCRAFT_STAGE/repos/packcc.git tools/packcc
      git submodule update --init --recommend-shallow --depth=1 --reference $SNAPCRAFT_STAGE/repos/sqlite.git tools/sqlite
      #sed --in-place -e 's/ --single-branch//g' Makefile.in
      autoconf
      ./configure --prefix= --exec-prefix=$SNAPCRAFT_STAGE --with-tcl=$SNAPCRAFT_STAGE/lib --enable-symbols
      make tcc
      make install-binaries install-libraries DESTDIR=$SNAPCRAFT_PART_INSTALL
    organize:
      root/stage/lib: lib
    stage: [-root]

apps:
  cftcl:
    command: bin/tclsh8.7
  tbuild-lite:
    command: bin/tclsh8.7 $SNAP/bin/tbuild-lite
  m2-node:
    command: bin/tclsh8.7 $SNAP/opt/m2/m2_node/m2_node.tcl
  m2-keys:
    command: bin/tclsh8.7 $SNAP/opt/m2/tools/keys.tcl
  authenticator:
    command: bin/tclsh8.7 $SNAP/opt/m2/authenticator/authenticator
  m2-admin-console:
    command: bin/tclsh8.7 $SNAP/opt/m2/admin_console/m2_admin_console.tcl

# vim: expandtab ts=8 shiftwidth=2
